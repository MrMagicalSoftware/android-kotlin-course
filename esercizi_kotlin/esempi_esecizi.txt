1)
We need a function that can transform a number (integer) into a string.

What ways of achieving this do you know?
Examples (input --> output):

123  --> "123"
999  --> "999"
-100 --> "-100"

fun numberToString(num: Int): String {
    return num.toString()
}

__________

2)
Write a function that removes the spaces from the string, then return the resultant string.

Examples:

Input -> Output
"8 j 8   mBliB8g  imjB8B8  jl  B" -> "8j8mBliB8gimjB8B8jlB"
"8 8 Bi fk8h B 8 BB8B B B  B888 c hl8 BhB fd" -> "88Bifk8hB8BB8BBBB888chl8BhBfd"
"8aaaaa dddd r     " -> "8aaaaaddddr"

fun noSpace(x: String): String {
    return x.replace(" " , "")
}

______________


3)

The first century spans from the year 1 up to and including the year 100, the second century - from the year 101 up to and including the year 200, etc.
Task

Given a year, return the century it is in.

Examples

1705 --> 18
1900 --> 19
1601 --> 17
2000 --> 20
2742 --> 28




fun century(number: Int): Int {
    
    if(number % 100 == 0)
    	return number / 100
    else
    	return (number / 100) +1
}


______________________



4 )
A hero is on his way to the castle to complete his mission. However, he's been told that the castle is surrounded with a couple of powerful dragons! each dragon takes 2 bullets to be defeated, our hero has no idea how many bullets he should carry.. Assuming he's gonna grab a specific given number of bullets and move forward to fight another specific given number of dragons, will he survive?

Return true if yes, false otherwise :)



fun hero(bullets: Int, dragons: Int) : Boolean {
  
    if(dragons > bullets)
        return false
    
    if(bullets >= dragons * 2)
        return true
    else
        return false

}

5 )Da un array contenente interi e stringhe sommare gli interi 




public class MixedSum {

    /*
    * Assume input will be only of Int or String type
    */
    public fun sum(mixed: List<Any>): Int {
        var somma : Int= 0
        for(elemento in mixed){
            
            // somma = somma + elemento
            
            somma += when (elemento) {
                is String -> elemento.toInt()
                is Int -> elemento
                else -> 0
            }
        }
        return somma
    }
}

___________________________

6 )  This function should test if the factor is a factor of base.

Return true if it is a factor or false if it is not.
About factors

Factors are numbers you can multiply together to get another number.

2 and 3 are factors of 6 because: 2 * 3 = 6

    You can find a factor by dividing numbers. If the remainder is 0 then the number is a factor.
    You can use the mod operator (%) in most languages to check for a remainder

For example 2 is not a factor of 7 because: 7 % 2 = 1

Note: base is a non-negative number, factor is a positive number.


fun checkForFactor(base: Int, factor: Int): Boolean {
    
    if(base % factor == 0)
        return true
    else
        return false
    
    
    //return factor % base == 0
}





